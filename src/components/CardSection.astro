<section class="bg-zinc-50 -mt-1 pt-2 pb-16 min-h-180">
  <header
    class="grid gap-2 items-baseline grid-flow-row-dense grid-cols-1 md:grid-cols-2 lg:grid-cols-3 pt-4">
    <h2 class="pl-6 font-mono text-xs flex-none">
      {Astro.props.title}
    </h2>
    <input
      id="filter"
      class="block mx-2 shadow-inner border-zinc-500 border-2 focus:outline-blue-200 text-left rounded-4xl px-4 py-2 bg-white mb-4 text-sm font-sans"
      placeholder="🔍 Filter by region"
    />
  </header>
  <div
    id="cards"
    class="grid gap-2 px-2 grid-cols-1 md:grid-cols-2 lg:grid-cols-3 justify-items-stretch place-items-start">
    <slot />
  </div>
</section>

<script>
  const collator = new Intl.Collator("en", {sensitivity: "base"})
  const filter = document.querySelector("#filter")
  const cards = document.querySelectorAll("#cards .card")
  const cardsByTitle = initCardsMap()

  function initCardsMap() {
    const cardsByTitle = new Map()
    for (const card of cards) {
      const title = card.querySelector("header a").innerText
      const values = cardsByTitle.get(title) ?? [card]
      values.push(card)
      cardsByTitle.set(title, values)
    }
    return cardsByTitle
  }

  function filterCards (search) {
    for (const key of cardsByTitle.keys()) {
      const cards = cardsByTitle.get(key)
      for (const card of cards) {
        if (collator.compare(search, key.substring(0, search.length)) === 0) {
        card.setAttribute("aria-hidden", "false")
        } else {
          card.setAttribute("aria-hidden", "true")
        }
      }
    }
  }

  if (filter?.value) {
    filterCards(filter?.value)
  }

  filter.addEventListener("input", (event) => {
    const s = event.target.value
    if (s.length === 0) {
      for (const card of cards) {
        card.removeAttribute("aria-hidden")
      }
    } else {
      filterCards(s)
    }
  })

</script>
