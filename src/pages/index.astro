---
import Layout from '../layouts/Layout.astro'
import Status from '../components/Status.astro'
import Card from '../components/Card.astro'
import Header from '../components/Header.astro'
import IdentityIcon from '../components/icons/IdentityIcon.astro'
import { IDs, IDTextHeadlines, IDTextOtherText, IDFlags } from '../Identity.js'
import KeyLabel from '../components/KeyLabel.astro'
import Footer from '../components/Footer.astro'
import slug from 'slug'

const statusMap = {
	'Rollout': 4,
	'Pilot': 3,
	'Plan': 2,
	'Unknown': 1
}
function statusCode (s: string) {
	return statusMap[s] ?? 0
}
const items = [...IDs].sort((a, b) => {
	return statusCode(b['Status']) - statusCode(a['Status'])
})
const active = items.filter((row) => row['Status'] === 'Rollout')
const wip = items.filter((row) => row['Status'] === 'Pilot')
const plan = items.filter((row) => row['Status'] === 'Plan')
const tbc = items.filter((row) => row['Status'] === 'Unknown')
---

<Layout>
	<Header dpiType="id" countryCount={items.length} />
  <div class="text-center align-middle text-mono text-sm">
    <div class="bg-gray-200 h-10 inline-block" style={{width: `${(tbc.length / items.length) * 100}%` }}>
    </div><div class="bg-blue-200 h-10 inline-block" style={{width: `${(plan.length / items.length) * 100}%` }}>
    </div><div class="bg-amber-200 h-10 inline-block" style={{width: `${(wip.length / items.length) * 100}%` }}>
    </div><div class="bg-green-200 h-10 inline-block" style={{width: `${(active.length / items.length) * 100}%` }}></div>
  </div>
	<div class="grid grid-flow-row-dense grid-cols-2 md:grid-cols-3">
	{ items.map(data => (
		<Card>
			<article>
				<header class="text-zinc-600 pb-2">
					<Status status={data['Status']} />
					<a class="ml-1 hover:underline" href={`${slug(data.Country)}`}>{data.Country}</a>
					<IdentityIcon class="inline float-right text-zinc-400"/>
				</header>
				<details>
					<summary>
						<span title="Name" class="font-semibold cursor-pointer">
							{data['Name']}
						</span>
						<dl>
						{ IDTextHeadlines.map(key => (
							<dt><KeyLabel>{key}</KeyLabel></dt>
							<dd>{data[key]}</dd>
						))}
						</dl>
					</summary>
					<dl>
						{ IDTextOtherText.map(key => (
							<dt><KeyLabel>{key}</KeyLabel></dt>
							<dd>{data[key]}</dd>
						))}
					</dl>
					<dl class="pt-2">
						{ IDFlags.map(key => (
							<div class="flex flex-row-reverse items-baseline justify-items-start ">
								<dt class="grow pl-2">
									<KeyLabel>{key}</KeyLabel></dt>
								<dd class="flex-none">
									<Status status={data[key]} />
								</dd>
							</div>
						))}
					</dl>
				</details>
			</article>
		</Card>
	))}
	</div>
	<!-- <Footer /> -->
</Layout>
