---
import slug from 'slug'
import Layout from '../layouts/Layout.astro'
import Status from '../components/Status.astro'
import Card from '../components/Card.astro'
import DataIcon from '../components/icons/DataIcon.astro'
import PaymentIcon from '../components/icons/PaymentIcon.astro'
import IdentityIcon from '../components/icons/IdentityIcon.astro'
import KeyLabel from '../components/KeyLabel.astro'
import { DataExchanges, DataExchangeFlags, DataExchangeText } from '../DataExchange.js'
import { IDs, IDFlags, IDText } from '../Identity.js'
import { Payments, PaymentFlags, PaymentText } from '../Payment.js'
import YesNo from '../components/YesNo.astro'

export async function getStaticPaths () {
	const regionMap = new Map()
	;[...Payments, ...IDs, ...DataExchanges].forEach(({Country}) => {
		regionMap.set(Country, {
			params: { country: slug(Country) },
			props: { country: Country}
		})
	})
	return [...regionMap.values()]
}

const country = Astro.props.country

const data = DataExchanges.find(x => x.Country === country) ?? {}
const pay = Payments.find(x => x.Country === country) ?? {}
const id = IDs.find(x => x.Country === country) ?? {}

---

<Layout title={country}>
  <h1 class="text-lg lg:text-2xl text-center pt-10 pb-8 font-sans font-bold">
		<a href='../' class="hover:underline">{country}</a>
	</h1>
	<div class="grid grid-cols-1 md:grid-cols-3 sm:px-2 gap-x-3 gap-y-8">
		{ id && 
			<Card class="bg-zinc-50">
				<article>
					<header class="text-zinc-600 pb-2 border-b border-zinc-100 mb-2 flex items-center">
						<IdentityIcon class="flex-none text-zinc-400"/>
						<div class="flex-grow px-1 text-zinc-600">Digital ID System</div>
						<div class="flex-none"><Status status={id['DPI Status']} title='DPI status' /></div>
					</header>
					<h1 class="pb-2 font-semibold text-base">
						{id['Name']}
					</h1>
					<dl>
						{ IDText.map(key => (
							<dt><KeyLabel>{key}</KeyLabel></dt>
							<dd>{id[key]}</dd>
						))}
						<dt><KeyLabel>URL</KeyLabel></dt>
						<dd>
							{ id['URL']?.startsWith('http')
							? <a class="hover:underline" href={id['URL']}>{new URL(id['URL']).origin}</a>
							: <span>{id['URL'] ?? 'NA'}</span>
							}
						</dd>
						<div class="pt-4">
							{ IDFlags.map(key => (
								<div class="flex flex-row-reverse items-baseline justify-items-start">
									<dt class="grow pl-2">
										<KeyLabel>{key}</KeyLabel></dt>
									<dd class="flex-none">
										<YesNo status={id[key]} />
									</dd>
								</div>
							))}
						</div>
					</dl>
				</article>
			</Card>
		}
		{ pay && 
			<Card class="bg-zinc-50">
				<article>
					<header class="text-zinc-600 pb-2 border-b border-zinc-100 mb-2 flex items-center">
						<PaymentIcon class="flex-none text-zinc-400"/>
						<div class="flex-grow px-1 text-zinc-600">Digital Payment System</div>
						<div class="flex-none"><Status status={pay['DPI Status']} title='DPI status' /></div>
					</header>
					<h1 class="pb-2 font-semibold text-base">
						{pay['Name']}
					</h1>
					<dl>
					{ PaymentText.map(key => (
						<dt><KeyLabel>{key}</KeyLabel></dt>
						<dd>{pay[key]}</dd>
					))}
					<dt><KeyLabel>URL</KeyLabel></dt>
					<dd>
						{ pay['URL']?.startsWith('http')
						? <a class="hover:underline" href={pay['URL']}>{new URL(pay['URL']).origin}</a>
						: <span>{pay['URL'] ?? 'NA'}</span>
						}
					</dd>
					<div class="pt-4">
						{ PaymentFlags.map(key => (
							<div class="flex flex-row-reverse items-baseline justify-items-start ">
								<dt class="grow pl-2	">
									<KeyLabel>{key}</KeyLabel></dt>
								<dd class="flex-none">
									<YesNo status={pay[key]} />
								</dd>
							</div>
						))}
						</div>
					</dl>
				</article>
			</Card>
		}
		{ data && 
			<Card class="bg-zinc-50">
				<article>
					<header class="text-zinc-600 pb-2 border-b border-zinc-100 mb-2 flex items-center">
						<DataIcon class="flex-none text-zinc-400 "/>
						<div class="flex-grow px-1 text-zinc-600">Data Exchange System</div>
						<div class="flex-none"><Status status={data['DPI Status']} title='DPI status' /></div>
					</header>
					<div class="pb-2 font-semibold text-base">
						{data['Name']}
					</div>
					<dl>
					{ DataExchangeText.map(key => (
						<dt><KeyLabel>{key}</KeyLabel></dt>
						<dd>{data[key]}</dd>
					))}
						<dt><KeyLabel>URL</KeyLabel></dt>
						<dd>
							{ data['URL']?.startsWith('http')
							? <a class="hover:underline" href={data['URL']}>{new URL(data['URL']).origin}</a>
							: <span>{data['URL'] ?? 'NA'}</span>
							}
						</dd>
					<div class="pt-4">
						{ DataExchangeFlags.map(key => (
								<div class="flex flex-row-reverse items-baseline justify-items-start ">
									<dt class="grow pl-2	">
										<KeyLabel>{key}</KeyLabel></dt>
									<dd class="flex-none">
										<YesNo status={data[key]} />
									</dd>
								</div>
							))}
						</div>
					</dl>
				</article>
			</Card>
		}
	</div>
	<section class="max-w-xl mx-auto my-10 text-center">
		<aside class="prose ">
			<p class="">üîç Found an error or something missing? <a href="/help">Let us know</a>.</p>
			<p>üìß <a href="https://forms.gle/dhoXGR9M6fVAoDKt7">Sign up here</a> for email updates about the DPI map.</p>
		</aside>
	</section>
</Layout>
